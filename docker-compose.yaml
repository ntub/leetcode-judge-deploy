version: '3'

services:
  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9090"
    volumes:
      - miniodata:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9090:9090"

  # rabbitmq:
  #   image: rabbitmq:management-alpine
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
  #     - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"

  # celery:
  #   image: ${BACKEND_IMAGE}:${BACKEND_TAG}
  #   restart: unless-stopped
  #   command: [ "run-celery-worker" ]
  #   env_file:
  #     - .env.app
  #   depends_on:
  #     - app

  # celery-beat:
  #   image: ${BACKEND_IMAGE}:${BACKEND_TAG}
  #   restart: unless-stopped
  #   command: [ "run-celery-beat" ]
  #   env_file:
  #     - .env.app
  #   depends_on:
  #     - app

  app:
    image: ${BACKEND_IMAGE}:${BACKEND_TAG}
    restart: unless-stopped
    depends_on:
      - db
      # - rabbitmq
      # - redis
    ports:
      - "8000:8000"
    env_file:
      - .env.app

  frontend:
    image: ${FRONTEND_IMAGE}:${FRONTEND_TAG}
    restart: unless-stopped
    environment:
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    depends_on:
      - app
    ports:
      - "3000:3000"


volumes:
  dbdata:
  miniodata:
